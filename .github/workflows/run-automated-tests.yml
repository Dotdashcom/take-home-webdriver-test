# Workflow to run automated tests on code pushed to master branch

name: Run automated tests suite
env:
  LOG_LEVEL: info
  ENVIRONMENT: staging
on:
  push:
    branches:
      - staging
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: info
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
        default: staging
      chromeVersion:
        description: 'Chrome Version'
        required: true
        default: '106.0.5249.119'
        type: choice
        options:
          - "latest"
          - "106.0.5249.119"
  outputs:
    cid:
      description: Container ID
      value: ${{ steps.info.outputs.website_cid }}
    address:
      description: Container ID
      value: ${{ steps.info.outputs.website_address }}
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    services:
      website:
        image: gprestes/the-internet:latest
        ports:
          - 7080:5000
        options: >-
          --rm
    steps:
    - name: Checkout repo code 
      uses: actions/checkout@v3
    - run: apt-get update; apt-get install curl -y
    - run: curl website:7080 > curl_result_docker
    - name: Get
    - run: cat curl_result_docker
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'corretto'
    - uses: browser-actions/setup-chrome@latest
    - run: chrome --version && whoami
    - name: Get test-runner IP
      run: message=$(curl https://api.ipify.org) && message=$(echo $message | tr '\n' ' ') && message=$(echo $message | xargs) && echo "ip=$message" >> $GITHUB_OUTPUT
      id: testRunnerAddress
    - name: Host address
      run: echo "Host IP address ${{steps.testRunnerAddress.outputs.ip}}"
    - name: Clean 
      run: mvn clean -P Staging -f pom.xml --batch-mode --update-snapshots
    - name: Build
      run: mvn compile -P Staging -f pom.xml --batch-mode --update-snapshots
    - name: Run the test suite
      run: >-
        mvn test -f pom.xml -P Staging --batch-mode --update-snapshots
      env:
        WEBSITE_HOST: website
        WEBSITE_PORT: 7080
        suiteXmlFile: regression.xml
        browser: remote-chrome
        browserVersion: ${{ needs.workflow_dispatch.inputs.chromeVersion.default }}
        headlessBrowser: false
        useSeleniumGrid: false
        testsThreadCount: 4
        testRunnerAddress: "http://${{steps.testRunnerAddress.outputs.ip}}:7080"
        webAppAddress: "http://$WEBSITE_HOST:$WEBSITE_PORT"
        seleniumGridAddress: "http://${{steps.testRunnerAddress.outputs.ip}}:4444/wd/hub"
        org.slf4j.simpleLogger.defaultLogLevel: ${{ needs.workflow_dispatch.inputs.logLevel.default }}
    - name: Install
      run: mvn install -P Staging -f pom.xml -DskipTests --batch-mode --update-snapshots
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm test
      if: always()
      with:
        name: Test run report
        path: target/
    - name: Display structure of uploaded files
      run: ls -R
      working-directory: target/